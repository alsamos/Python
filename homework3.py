# Дан список повторяющихся элементов. Вернуть список с дублирующимися элементами. В результирующем списке не должно быть дубликатов.

init_list = [1, 2, 5, 'a', 5, 'a', 13, 2, 2, 'a', 26, 13, 100, 100, 100]

temp = []
for x in init_list:
    if init_list.count(x) > 1:
        temp.append(x)

print (f'Список с дублирующимися элементами без дубликатов {set(temp) = }')


# В большой текстовой строке подсчитать количество встречаемых слов и вернуть 10 самых частых. Не учитывать знаки препинания и регистр 
# символов. За основу возьмите любую статью из википедии или из документации к языку.

import string

text_str = 'На данном портале в свое время также можно было участвовать в тем соревнованиях. \
            Однако к текущему моменту все они потеряли актуальность. Тем не менее, ресурс \
            по-прежнему являет портале собой богатую площадку для развития навыков. В первую очередь \
            – за счет многочисленных задач по Java, C++, PHP, C#, большую, Ruby, Python и Objective-C. \
            В каждой из них d нужно дописать большую часть кода. Как правило, на большую выполнение \
            задания отводится 30 минут.' 

words = [w.strip(string.punctuation) for w in text_str.lower().split()]

counts = []
for unique_word in list(set(words)):
   times = 0              
   for word in words:     
     if word == unique_word:   
       times += 1         
   counts.append((times, unique_word))
   
counts.sort()
counts.reverse()        

for i in range(10):
    times, word = counts[i]
    print(f'{times =} {word=}')


# Создайте словарь со списком вещей для похода в качестве ключа и их массой в качестве значения. Определите какие вещи влезут в рюкзак 
# передав его максимальную грузоподъёмность. Достаточно вернуть один допустимый вариант.


travel_stuff = {'Спички': 0.2, 'Спальник': 4, 'Вода': 1.5, 'Консервы': 2.75, 'Пила': 0.7, 'Дождевик': 0.5, 'Пауербанк': 0.7, 'Хлеб': 2}
bag_capacity = float(input('Введите максимальную грузоподъемность рюкзака: '))
print(f'В рюкзак грузоподъемностью {bag_capacity}, например, поместятся: ')

in_bag = []
for stuff, capacity in travel_stuff.items():
    if capacity < bag_capacity:
        in_bag.append(stuff)
        bag_capacity -= capacity
print(f'{in_bag}')


